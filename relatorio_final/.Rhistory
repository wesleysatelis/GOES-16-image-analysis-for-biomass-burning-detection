tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = viridis(1000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
c2 <- scan("~/Desktop/201904261340G16.SP_2_3_6_ascii--L1B.C02.txt", sep = ',', quiet=T)
c2 <- matrix(c2, byrow= TRUE, ncol = 2110, nrow = 1332)
c3 <- scan("~/Desktop/201904261340G16.SP_2_3_6_ascii--L1B.C03.txt", sep = ',', quiet=T)
c3 <- matrix(c3, byrow= TRUE, ncol = 2110, nrow = 1332)
ndvi <- t(c3-c2)/t(c3+c2)
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0')
ndvi_rast <- setValues(ndvi_rast, as.vector(ndvi))
ndvi_rast <- flip(ndvi_rast, 2)
# # focos de queimada de interesse
# focos <- readr::read_csv("~/Dropbox/IC - Wesley/processamento/inpe_queimadas/focos_filtrados.csv") %>%
#   dplyr::mutate(datahora = str_replace_all(datahora, pattern = "/", replacement = "-")) %>%
#   dplyr::mutate(datahora = lubridate::as_datetime(datahora), plant = 1:16)
#
# loc <- focos %>%
#   dplyr::sample_n(1) %>%
#   dplyr::select(latitude, longitude) %>%
#   sf::st_as_sf(coords = c(2,1), crs=crs("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0", asText=TRUE))
#
# buffer <- raster::extract(x=ndvi_rast, y=loc, buffer=2000, df=T)
#
# bf <- raster(ncol=(2000*2)/500, nrow=(2000*2)/500)
# bf <- setValues(bf, vals)
#
# tm_shape(bf) +
#   tm_raster(midpoint = 0, palette = viridis(100), style = "cont", title="NDVI", interpolate = FALSE) +
#   tm_layout(legend.outside = T, legend.outside.position = "right", legend.outside.size = 0.1)
#
# source("~/Dropbox/IC - Wesley/funcoes.R")
#
# library(geobr)
# sao_paulo <- geobr::read_state(code_state = "SP", showProgress = TRUE)
# sao_paulo <- st_transform(sao_paulo, crs = crs(ndvi_rast, asText=TRUE))
tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = viridis(1000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = viridis(10000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
c2 <- scan("~/Desktop/201904261340G16.SP_2_3_6_ascii--L1B.C06.txt", sep = ',', quiet=T)
c2 <- matrix(c2, byrow= TRUE, ncol = 2110, nrow = 1332)
c3 <- scan("~/Desktop/201904261340G16.SP_2_3_6_ascii--L1B.C03.txt", sep = ',', quiet=T)
c3 <- matrix(c3, byrow= TRUE, ncol = 2110, nrow = 1332)
ndvi <- t(c3-c2)/t(c3+c2)
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0')
ndvi_rast <- setValues(ndvi_rast, as.vector(ndvi))
ndvi_rast <- flip(ndvi_rast, 2)
# # focos de queimada de interesse
# focos <- readr::read_csv("~/Dropbox/IC - Wesley/processamento/inpe_queimadas/focos_filtrados.csv") %>%
#   dplyr::mutate(datahora = str_replace_all(datahora, pattern = "/", replacement = "-")) %>%
#   dplyr::mutate(datahora = lubridate::as_datetime(datahora), plant = 1:16)
#
# loc <- focos %>%
#   dplyr::sample_n(1) %>%
#   dplyr::select(latitude, longitude) %>%
#   sf::st_as_sf(coords = c(2,1), crs=crs("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0", asText=TRUE))
#
# buffer <- raster::extract(x=ndvi_rast, y=loc, buffer=2000, df=T)
#
# bf <- raster(ncol=(2000*2)/500, nrow=(2000*2)/500)
# bf <- setValues(bf, vals)
#
# tm_shape(bf) +
#   tm_raster(midpoint = 0, palette = viridis(100), style = "cont", title="NDVI", interpolate = FALSE) +
#   tm_layout(legend.outside = T, legend.outside.position = "right", legend.outside.size = 0.1)
#
# source("~/Dropbox/IC - Wesley/funcoes.R")
#
# library(geobr)
# sao_paulo <- geobr::read_state(code_state = "SP", showProgress = TRUE)
# sao_paulo <- st_transform(sao_paulo, crs = crs(ndvi_rast, asText=TRUE))
tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = viridis(10000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = inferno(10000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
# bf <- raster(ncol=(2000*2)/500, nrow=(2000*2)/500)
# bf <- setValues(bf, vals)
#
# tm_shape(bf) +
#   tm_raster(midpoint = 0, palette = viridis(100), style = "cont", title="NDVI", interpolate = FALSE) +
#   tm_layout(legend.outside = T, legend.outside.position = "right", legend.outside.size = 0.1)
#
# source("~/Dropbox/IC - Wesley/funcoes.R")
#
# library(geobr)
sao_paulo <- geobr::read_state(code_state = "SP", showProgress = TRUE)
#
# bf <- raster(ncol=(2000*2)/500, nrow=(2000*2)/500)
# bf <- setValues(bf, vals)
#
# tm_shape(bf) +
#   tm_raster(midpoint = 0, palette = viridis(100), style = "cont", title="NDVI", interpolate = FALSE) +
#   tm_layout(legend.outside = T, legend.outside.position = "right", legend.outside.size = 0.1)
#
# source("~/Dropbox/IC - Wesley/funcoes.R")
#
library(geobr)
sao_paulo <- geobr::read_state(code_state = "SP", showProgress = TRUE)
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs="+proj=longlat +ellps=WGS84 +towgs84=0,0,0 +no_defs")
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0')
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4674 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0')
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4674 +proj=longlat +ellps=WGS84 +no_defs +towgs84=0,0,0')
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4674 +proj=longlat +ellps=WGS84 +no_defs')
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+init=epsg:4674 +proj=longlat +no_defs')
ndvi_rast <- raster(xmn=-53.4948231956, xmx=-43.9471907179,
ymn=-25.4224855885, ymx=-19.4198207653, ncols=2110, nrows=1332,
crs='+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs ')
# focos de queimada de interesse
focos <- readr::read_csv("~/Dropbox/IC - Wesley/processamento/inpe_queimadas/focos_filtrados.csv") %>%
dplyr::mutate(datahora = str_replace_all(datahora, pattern = "/", replacement = "-")) %>%
dplyr::mutate(datahora = lubridate::as_datetime(datahora), plant = 1:16)
loc <- focos %>%
dplyr::sample_n(1) %>%
dplyr::select(latitude, longitude) %>%
sf::st_as_sf(coords = c(2,1), crs='+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs')
tm_shape(ndvi_rast) +
tm_raster(midpoint = 0, palette = inferno(10000), style = "cont", title = "NDVI") +
# tm_shape(sao_paulo) + tm_borders(col = "white") +
# tm_shape(loc_plant) + tm_bubbles(col="red", size = 0.05, alpha=1) +
tm_graticules(col="white", lwd=0.5) +
tm_layout(frame = F, legend.outside = T, legend.outside.position="right", legend.outside.size=0.2)
install.packages("geobr")
install.packages("geobr")
#
# bf <- raster(ncol=(2000*2)/500, nrow=(2000*2)/500)
# bf <- setValues(bf, vals)
#
# tm_shape(bf) +
#   tm_raster(midpoint = 0, palette = viridis(100), style = "cont", title="NDVI", interpolate = FALSE) +
#   tm_layout(legend.outside = T, legend.outside.position = "right", legend.outside.size = 0.1)
#
# source("~/Dropbox/IC - Wesley/funcoes.R")
#
library(geobr)
sao_paulo <- geobr::read_state(code_state = "SP", showProgress = TRUE)
load("~/Dropbox/IC - Wesley/relatorio_final/final.RData")
cpt_frame <- dplyr::filter(queima_max, index=="nbr", plant==15, pixel=="pixel_05") %>%
dplyr::rename(valor=max)
source("https://www.dropbox.com/s/xt8bipung6s2897/funcoes.R?dl=1")
load("~/Dropbox/IC - Wesley/relatorio_final/final.RData")
cpt_frame <- dplyr::filter(queima_max, index=="nbr", plant==15, pixel=="pixel_05") %>%
dplyr::rename(valor=max)
cpt_frame <- focos %>%
dplyr::rename(data_queima=datahora) %>%
dplyr::right_join(cpt_frame)
mv.max_nbr <- changepoint::cpt.meanvar(cpt_frame$valor, method="BinSeg", Q=5)
plt.cpt_nbr <- plot_cpt(mv.max_nbr, cpt_frame)
plt.cpt_nbr[[2]]
cpt_frame <- dplyr::filter(queima_max, index=="ndvi", plant==15, pixel=="pixel_05") %>%
dplyr::rename(valor=max)
cpt_frame <- focos %>%
dplyr::rename(data_queima=datahora) %>%
dplyr::right_join(cpt_frame)
mv.max_ndvi <- changepoint::cpt.meanvar(cpt_frame$valor, method="BinSeg", Q=5)
plt.cpt_ndvi <- plot_cpt(mv.max_ndvi, cpt_frame)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]])
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data_hora, y=valor)) + facet_wrap(~index)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) + facet_wrap(~index)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) + facet_wrap(~index, ncol=2)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) + facet_wrap(~index, ncol=1)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5)+
facet_wrap(~index, ncol=1)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300")
queima_nbr <- unique(plt.cpt_nbr[[2]]$data_queima)
queima_nbr
queima_ndvi <- unique(plt.cpt_ndvi[[2]]$data_queima)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=queima_nbr, linetype="dashed", col="#ff7300")
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=c(queima_nbr, queima_ndvi), linetype="dashed", col="#ff7300")
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300")
data_queima <- unique(plt.cpt_nbr[[2]]$data_queima)
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300")
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=1) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_bw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_classic()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_gray()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_minimal()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_update()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_void()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_set()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_bw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_bw(base_size = 9)
?theme_bw
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_light()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_gray()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_get()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_dark()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_linedraw()
?facet_wrap
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_grid(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_linedraw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_grid(cols = index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_linedraw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_grid(cols = index) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_linedraw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_grid(cols = vars(index)) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_linedraw()
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.title.x = element_text(size = rel(1.8), angle = 00))
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.title.x = element_text(size = rel(1), angle = 00))
?theme
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.text = element_text(size = 8),
plot.margin = margin(0, 0, 0, 2, "cm"))
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.text = element_text(size = 8),
plot.margin = margin(0, 0, 2, 0, "cm"))
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.text = element_text(size = 8),
plot.margin = margin(0, 2, 0, 0, "cm"))
bind_rows(plt.cpt_nbr[[2]], plt.cpt_ndvi[[2]]) %>%
ggplot() +
geom_line(aes(x=data, y=valor)) +
geom_segment(aes(x = x_data, xend = xend_data, y=y, yend=y), col="red", size=0.5) +
facet_wrap(~index, ncol=2) +
geom_vline(xintercept=data_queima, linetype="dashed", col="#ff7300") +
theme_grey() +
theme(axis.text = element_text(size = 8),
plot.margin = margin(0, 0.3, 0, 0, "cm"))
dir()
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE,
fig.align='center', fig.pos = 'H', fig.height=2)
library(gridExtra)
library(kableExtra)
library(geobr)
library(tmap)
load("final.RData")
source("../funcoes.R")
theme_set(theme_bw(base_size = 10))
options(knitr.table.format="latex")
# sao_paulo <- geobr::read_state(code_state="SP", showProgress=FALSE, year=2018)
# sao_paulo <- st_transform(sao_paulo, crs=crs(ndvi_rast, asText=TRUE))
#
# a <- tm_shape(ndvi_rast) +
#   tm_raster(midpoint=0, palette=viridis(10000), style="cont", title="NDVI", legend.is.portrait=FALSE) +
#   tm_shape(sao_paulo) + tm_borders(col="white") +
#   tm_graticules(col="white", lwd=0.2, alpha=0.8) +
#   tm_layout(legend.title.size=0.7, legend.text.size=0.5, title.size=0.8, title.position=c("center", "top"),
#             legend.outside=T, legend.outside.position="bottom",
#             legend.position=c("center", "bottom"), title.snap.to.legend=FALSE,
#             legend.frame=FALSE, frame=FALSE, inner.margins = 0, outer.margins = 0, legend.height=-1)
#
# b <- tm_shape(nbr_rast) +
#   tm_raster(midpoint=0, palette=inferno(10000), style="cont", title="NBR", legend.is.portrait=FALSE) +
#   tm_shape(sao_paulo) + tm_borders(col="white") +
#   tm_graticules(col="white", lwd=0.2, alpha=0.8) +
#   tm_layout(legend.title.size=0.7, legend.text.size=0.5, title.size=0.8, title.position=c("center", "top"),
#             legend.outside=T, legend.outside.position="bottom",
#             legend.position=c("center", "bottom"), title.snap.to.legend=FALSE,
#             legend.frame=FALSE, frame=FALSE, inner.margins = 0, outer.margins = 0, legend.height=-1)
#
# tmap_arrange(list(a, b), ncol=2, inner.margins=0, asp=NA)
knitr::include_graphics("~/Downloads/mapas_indices_ic.png")
?knitr::include_graphics
# sao_paulo <- geobr::read_state(code_state="SP", showProgress=FALSE, year=2018)
# sao_paulo <- st_transform(sao_paulo, crs=crs(ndvi_rast, asText=TRUE))
#
# a <- tm_shape(ndvi_rast) +
#   tm_raster(midpoint=0, palette=viridis(10000), style="cont", title="NDVI", legend.is.portrait=FALSE) +
#   tm_shape(sao_paulo) + tm_borders(col="white") +
#   tm_graticules(col="white", lwd=0.2, alpha=0.8) +
#   tm_layout(legend.title.size=0.7, legend.text.size=0.5, title.size=0.8, title.position=c("center", "top"),
#             legend.outside=T, legend.outside.position="bottom",
#             legend.position=c("center", "bottom"), title.snap.to.legend=FALSE,
#             legend.frame=FALSE, frame=FALSE, inner.margins = 0, outer.margins = 0, legend.height=-1)
#
# b <- tm_shape(nbr_rast) +
#   tm_raster(midpoint=0, palette=inferno(10000), style="cont", title="NBR", legend.is.portrait=FALSE) +
#   tm_shape(sao_paulo) + tm_borders(col="white") +
#   tm_graticules(col="white", lwd=0.2, alpha=0.8) +
#   tm_layout(legend.title.size=0.7, legend.text.size=0.5, title.size=0.8, title.position=c("center", "top"),
#             legend.outside=T, legend.outside.position="bottom",
#             legend.position=c("center", "bottom"), title.snap.to.legend=FALSE,
#             legend.frame=FALSE, frame=FALSE, inner.margins = 0, outer.margins = 0, legend.height=-1)
#
# tmap_arrange(list(a, b), ncol=2, inner.margins=0, asp=NA)
# knitr::include_graphics("mapas_indices_ic.png", auto_pdf = TRUE)
![]("mapas_indices_ic.png")
?tm_legend
load("final.RData")
setwd("~/Dropbox/IC - Wesley/relatorio_final")
load("final.RData")
cpt_frame <- dplyr::filter(queima_max, index=="nbr", plant==15, pixel=="pixel_05") %>%
dplyr::rename(valor=max)
med_cpt <- dplyr::filter(med, index=="ndvi", plant==15) %>%
dplyr::mutate(data=data_hora) %>%
dplyr::select(-c(hora, data_hora)) %>%
dplyr::mutate(valor=comb) %>%
dplyr::select(-comb)
iris
