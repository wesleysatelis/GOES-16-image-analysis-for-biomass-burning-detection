library(tidyverse)
library(lubridate)
load("vetores.RData")
View(vetores)
?filter
all_vars(vetores, is.na(.))
vetores %>% filter_all(all_vars(.))
vetores %>% filter_all(!is.na, all_vars(.))
vetores %>% filter_all(all_vars(is.na(.)))
vetores %>% filter_all(all_vars(!is.na(.)))
vetores %>% filter_all(all_vars(is.na(.)))
v <- drop_na(vetores)
vetores %>% filter_all(all_vars(^is.na(.)))
vetores %>% filter_all(all_vars(is.na(.)))
a <- vetores %>% filter_all(all_vars(is.na(.)))
View(a)
a <- vetores %>% filter_all(any_vars(is.na(.)))
View(a)
# faltantes
faltantes <- vetores %>% filter_all(any_vars(is.na(.)))
View(faltantes)
View(vetores)
View(faltantes)
View(vetores)
View(faltantes)
View(v)
y <- as.vector(vetores$`1`)
# Filtro mediana (suavização)
movingMedian <- function(y, m = 7){
n <- length(y)
y.hat <- numeric(n)
y <- c(rep(median(y), m), y)
for(i in 1:n){
y.hat[i] <- median(y[i:(i-m) + m], na.rm = TRUE)
}
return(y.hat)
}
filterY <- movingMedian(y, 10)
fitted <- haRmonics(y, method = "hants", ts = 1:length(y),
lenBasePeriod = length(y), numFreq = 32, HiLo = "Lo",
low = -0.7, high = 0.7, fitErrorTol = 0.2,
degreeOverDeter=10, delta=0.1)
install.packages("geoTS")
library(geoTS)
load("vetores.RData")
# faltantes
faltantes <- vetores %>% filter_all(any_vars(is.na(.)))
y <- as.vector(vetores$`1`)
# Filtro mediana (suavização)
movingMedian <- function(y, m = 7){
n <- length(y)
y.hat <- numeric(n)
y <- c(rep(median(y), m), y)
for(i in 1:n){
y.hat[i] <- median(y[i:(i-m) + m], na.rm = TRUE)
}
return(y.hat)
}
filterY <- movingMedian(y, 10)
fitted <- haRmonics(y, method = "hants", ts = 1:length(y),
lenBasePeriod = length(y), numFreq = 32, HiLo = "Lo",
low = -0.7, high = 0.7, fitErrorTol = 0.2,
degreeOverDeter=10, delta=0.1)
fit <- fitted[["fitted"]]
y <- as.vector(drop_na(vetores)$`1`)
# Filtro mediana (suavização)
movingMedian <- function(y, m = 7){
n <- length(y)
y.hat <- numeric(n)
y <- c(rep(median(y), m), y)
for(i in 1:n){
y.hat[i] <- median(y[i:(i-m) + m], na.rm = TRUE)
}
return(y.hat)
}
filterY <- movingMedian(y, 10)
fitted <- haRmonics(y, method = "hants", ts = 1:length(y),
lenBasePeriod = length(y), numFreq = 32, HiLo = "Lo",
low = -0.7, high = 0.7, fitErrorTol = 0.2,
degreeOverDeter=10, delta=0.1)
fit <- fitted[["fitted"]]
vet <- vetores %>%
mutate(data=as.character(data), hora=as.character(hora)) %>%
unite("hora", data:hora, sep=' ') %>%
mutate(hora=as.POSIXct(strptime(hora, "%Y.%m.%d %H:%M:%S"), tz='UTC'), fit_hants_1=fit, series_1=filterY) %>%
select(hora, `1`, fit_hants_1, series_1) %>% gather("ajuste", "valor", `1`:series_1)
vet <- vetores %>%
mutate(data=as.character(data), hora=as.character(hora)) %>%
unite("hora", data:hora, sep=' ') %>%
mutate(hora=as.POSIXct(strptime(hora, "%Y.%m.%d %H:%M:%S"), tz='UTC'), fit_hants_1=fit, series_1=filterY) %>%
select(hora, `1`, fit_hants_1, series_1) %>% gather("ajuste", "valor", `1`:series_1)
time_breaks <- vetores$hora %>%
str_sub(1, 20) %>%
unique()
vet %>%
# filter(hora > as.POSIXct("2019-06-15 00:00:00", tz = "UTC") &
# hora < as.POSIXct("2019-06-16 00:00:00", tz = "UTC")) %>%
ggplot(aes(x=as_datetime(hora), y=valor)) +
geom_line() +
facet_wrap(~ajuste) +
# scale_x_continuous(name="Data", breaks=seq(1, length(time_breaks), 1), labels = time_breaks) +
scale_x_datetime(name = "Data", date_breaks = "1 day") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ylab("NDVI") + xlab("Data/hora") + ylim(-0.5, 0.7)
filter(vet, ajuste=="fit_hants_1") %>%
ggplot(aes(x=as_datetime(hora), y=valor)) +
geom_line() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
a <- filter(vet, ajuste=="fit_hants_1")
b <- filter(vet, ajuste=="1")
plot(a$hora, na.omit(a$valor), type="l", ylim=c(-1,1))
lines(b$hora, na.omit(b$valor), type="l", col="red")
View(vetores)
vetores %>% gather(-c(data, hora, recorte))
vetores %>% gather("pixel", "ndvi", -c(data, hora, recorte))
v <- vetores %>% gather("pixel", "ndvi", -c(data, hora, recorte))
ggplto
install.packages(c("rgdal", "ssh"))
